
import lejos.util.Delay;
import lejos.nxt.LCD;
import lejos.nxt.Motor;
import lejos.nxt.SensorPort;
import lejos.nxt.TouchSensor;
import lejos.nxt.UltrasonicSensor;
import lejos.robotics.navigation.DifferentialPilot;

public class __A__Four {
    DifferentialPilot pilot;
    static TouchSensor touch = new TouchSensor(SensorPort.S1);
    static UltrasonicSensor prox = new UltrasonicSensor(SensorPort.S4);
    private final static int TRAVEL_SPEED = 30;
    private final static int ROTATE_SPEED = 100;
    private final static int ACCEL = 60;
    private final static int DECEL = ACCEL * -1;
    private final static int LEFT = 95;
    private final static int RIGHT = LEFT * -1;

    public static void main(String[] args) {
        __A__Four robot = new __A__Four();
        robot.pilot = new DifferentialPilot(13.6, 12.85, Motor.B, Motor.C, true);
        robot.run();
    }

    public void run() {
        pilot.setTravelSpeed(TRAVEL_SPEED);
        pilot.setRotateSpeed(ROTATE_SPEED);
        pilot.setAcceleration(ACCEL);
        LCD.drawString("Challenge Four Code __A__", 0, 0);
        
        start();                //forward off edge
        pilot.steer(-20, -95);   //turn left toward first ramp
    }

    public void driveForward(int dist, int near) {
        pilot.setAcceleration(ACCEL);
        pilot.travel(dist, true);
        while (pilot.isMoving()) {
            if (nearObject(near)) {
                pilot.stop();
            }
        }
    }

    public void start() {
        pilot.travel(15);
        pilot.rotate(-52);
        pilot.setTravelSpeed(500);
        pilot.setAcceleration(500);
        pilot.travel(20);
        pilot.setTravelSpeed(TRAVEL_SPEED);
        pilot.setAcceleration(ACCEL);
        pilot.setRotateSpeed(ROTATE_SPEED);
        rotateLeft();
        pilot.travel(-20);
    }

    public void harvest(float driveSpeed, int armSpeed, long driveTime) {
        pilot.setTravelSpeed(driveSpeed);
        Motor.A.setSpeed(armSpeed);
        Motor.A.backward();
        Delay.msDelay(2500);
        Motor.A.stop();
        pilot.travel(-3);
    }

    public boolean nearObject(int near) {
        return (prox.getDistance() < near);
    }

    public void rotateRight() {
        pilot.rotate(RIGHT);
    }

    public void rotateLeft() {
        pilot.rotate(LEFT);
    }
}
